events {
    worker_connections 1024;
}

env HOST;

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile       on;
    keepalive_timeout 65;
    server_tokens  off;
    more_clear_headers Server;

    # Resolver dla wewnętrznych sub‑requestów
    resolver 127.0.0.11 ipv6=off valid=30s;

    #############
    # Brotli
    # #############
    brotli on;
    brotli_comp_level 5;
    brotli_buffers 16 8k;
    brotli_static on;
    brotli_types text/plain text/css application/javascript application/json application/xml application/dash+xml;

    #################################
    # Cache dla autoryzacji (auth_request)
    #################################
    proxy_cache_path /var/cache/nginx levels=1:2
                     keys_zone=zone_auth:10m
                     max_size=100m
                     inactive=60m;


    upstream backend_servers {
        server ${HOST}:5000;
    }

    server {
        listen 80;
        location / {
            proxy_pass http://backend_servers;
            proxy_set_header Host            $host;
            proxy_set_header X-Real-IP       $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

               proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
    
            proxy_pass_request_body on;
            proxy_set_header Content-Length $content_length;
            proxy_set_header Content-Type $content_type;
        }


    #################################
    # Wewnętrzny endpoint auth_request
    #################################
        # server_name localhost;

        # Lokalny, internal endpoint do pobrania tokenu
        location = /_auth_token {
            internal;

            # Przekazujemy stream_id jako query i nagłówek
            proxy_set_header X-Stream-ID $stream_id;
            proxy_set_header Host $host;

            proxy_pass http://backend_servers/token?stream_id=$stream_id;
            proxy_pass_request_body off;
            proxy_set_header   Content-Length "";

            # Pobieramy nagłówek "Token" z odpowiedzi backendu
            proxy_pass_header  Token;

            # Cache wyników
            proxy_cache        zone_auth;
            proxy_cache_key    "$arg_stream_id";
            proxy_cache_valid  200 300s;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock   on;
            proxy_cache_lock_timeout 5s;

            # Debug
            error_log /var/log/nginx/auth_request.log debug;
        }

        location = /_auth_webrtc {
            internal;

            proxy_pass http://backend_servers/token?stream_id=$stream_id;
            proxy_pass_request_body off;
            proxy_set_header   Content-Length "";

            # Pobieramy nagłówek "Token" z odpowiedzi backendu
            proxy_pass_header  Token;

            # Cache wyników
            proxy_cache        zone_auth;
            proxy_cache_key    "$arg_stream_id";
            proxy_cache_valid  200 300s;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock   on;
            proxy_cache_lock_timeout 5s;

            # Debug
            error_log /var/log/nginx/auth_request.log debug;
        }

        #################################
        # Debug: sprawdzenie tokenu
        #################################
        location ~ ^/debug/token/(?<id>\d+)\.txt$ {
            # internal off;
            set $stream_id $id;
            auth_request        /_auth_token;
            auth_request_set    $token   $upstream_http_token;
            add_header Content-Type text/plain;
            return 200 "Stream ID: $id\nToken: $token\n";
        }

        #################################
        # DASH – manifest podstawowy
        # /dash/123.mpd lub /dash/123_720p.mpd → token+proxy_pass
        #################################
        location ~ ^/dash/(?<id>\d+)(?<quality>_\d+p)?\.mpd$ {
            set $stream_id $id;
            auth_request        /_auth_token;
            auth_request_set    $token $upstream_http_token;

            types { application/dash+xml mpd; }
            default_type       application/dash+xml;

            add_header Cache-Control no-cache;
            expires -1;

            proxy_set_header Host $host;
            proxy_pass http://srs:8080/live/$token$quality.mpd;
        }

        #################################
        # DASH – init dla VLC (audio-init.mp4, video-init.mp4)
        # /dash/123/audio-init.mp4 lub /dash/123_720p/audio-init.mp4
        #################################
        location ~ ^/dash/(?<id>\d+)(?<quality>_\d+p)?/(?<type>audio|video)-init\.mp4$ {
            set $stream_id $id;
            auth_request        /_auth_token;
            auth_request_set    $token $upstream_http_token;

            types { video/mp4 mp4; }
            default_type       application/octet-stream;

            proxy_set_header Host $host;
            proxy_pass         http://srs:8080/live/$token$quality/$type-init.mp4;
        }

        #################################
        # DASH – init i media segments (z auth_request, teraz już także .mp4)
        # /dash/123/audio-1.m4s lub /dash/123_720p/video-82.m4s
        #################################
        location ~ ^/dash/(?<id>\d+)(?<quality>_\d+p)?/(?<file>(?:audio|video)-(?:init|\d+)\.(?:mp4|m4s|m4v|m4a))$ {
            set $stream_id $id;
            auth_request        /_auth_token;
            auth_request_set    $token $upstream_http_token;

            proxy_set_header Host $host;
            proxy_pass         http://srs:8080/live/$token$quality/$file;
        }

        # –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
        # HLS – bezpośrednie żądania do SRS (/live/123.m3u8)
        # –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
        location ~ ^/live/(?<token>[^/]+)\.m3u8$ {
            types { application/vnd.apple.mpegurl m3u8; }
            default_type        application/vnd.apple.mpegurl;

            add_header Cache-Control no-cache;
            expires -1;

            proxy_set_header Host $host;
            proxy_pass http://srs:8080/live/$token.m3u8$is_args$args;
        }

        # –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
        # HLS – playlista .m3u8 (z autoryzacją)
        # /hls/123.m3u8 lub /hls/123_720p.m3u8 → token+proxy_pass
        # –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
        location ~ ^/hls/(?<id>\d+)(?<quality>_\d+p)?\.m3u8$ {
            set $stream_id $id;
            auth_request        /_auth_token;
            auth_request_set    $token $upstream_http_token;

            types { application/vnd.apple.mpegurl m3u8; }
            default_type        application/vnd.apple.mpegurl;

            add_header Cache-Control no-cache;
            expires -1;

            proxy_set_header Host $host;
            proxy_pass http://srs:8080/live/$token$quality.m3u8;
        }

        # –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
        # HLS – bezpośrednie segmenty .ts do SRS (/live/123-315.ts)
        # –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
        location ~ ^/live/(?<token>[^?]+)\.ts$ {
            proxy_set_header Host $host;
            proxy_pass http://srs:8080/live/$token.ts$is_args$args;
        }
        
        # –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
        # HLS – bezpośrednie segmenty .ts w podfolderach (/live/123/segment.ts)
        # –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
        location ~ ^/live/(?<token>[^/]+)/(?<seg>[^?]+\.ts)$ {
            proxy_set_header Host $host;
            proxy_pass http://srs:8080/live/$token/$seg$is_args$args;
        }

        # –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
        # HLS – segmenty .ts (z autoryzacją)
        # –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
        location ~ ^/hls/(?<id>\d+)/(?<seg>\d+\.ts)$ {
            set $stream_id $id;
            auth_request        /_auth_token;
            auth_request_set    $token $upstream_http_token;

            proxy_set_header Host $host;
            proxy_pass http://srs:8080/live/$token/$seg;
        }

            #################################
    # WebRTC WHEP – endpoint z autoryzacją (odtwarzanie)
    # /rtc/v1/whep/?app=live&stream=123 → token+proxy_pass
    #################################
    location ~ ^/rtc/v1/whep/$ {
        # Pobierz stream_id z parametru query 'stream'
        if ($arg_stream ~ ^(\d+)$) {
            set $stream_id $1;
        }

        if ($stream_id = "") {
            return 400 "Missing or invalid stream parameter";
        }

        auth_request        /_auth_webrtc;
        auth_request_set    $token   $upstream_http_token;

        # if ($token = "") {
        #     return 402 "Missing or invalid token";
        # }


        # Nagłówki potrzebne dla WebRTC
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;

        # Wymuszenie HTTP/1.1 i podtrzymanie połączenia
        proxy_http_version    1.1;
        proxy_set_header      Connection "";

        # Metoda odpowiada oryginałowi
        proxy_method          $request_method;

        # Przekazuj wszystkie nagłówki i ciało
        proxy_pass_request_headers on;
        proxy_pass_request_body    on;

        # Czasowe limity
        proxy_connect_timeout 5s;
        proxy_send_timeout    60s;
        proxy_read_timeout    60s;

        # Wyłącz bufory (od razu wysyłaj każdą porcję)
        proxy_buffering         off;
        proxy_request_buffering off;

        proxy_pass http://srs:1985/rtc/v1/whep/?app=live&stream=$token;
    }


        #################################
        # WebRTC WHIP – endpoint z autoryzacją (publikowanie)
        # /rtc/v1/whip/?app=live&stream=123 → token+proxy_pass
        #################################
        location ~ ^/rtc/v1/whip/$ {
            # Pobierz stream_id z parametru query 'stream'
            if ($arg_stream ~ ^(\d+)$) {
                set $stream_id $1;
            }
            
            # Jeśli nie ma stream_id, zwróć błąd
            if ($stream_id = "") {
                return 400 "Missing or invalid stream parameter";
            }

            auth_request        /_auth_webrtc;
            auth_request_set    $token $upstream_http_token;

            # Przepisz parametr stream na token
            set $args "app=live&stream=$token";

            # Nagłówki potrzebne dla WebRTC
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Obsługa wszystkich metod HTTP potrzebnych dla WebRTC
            proxy_method $request_method;
            
            # Przekazuj wszystkie nagłówki
            proxy_pass_request_headers on;
            proxy_pass_request_body on;
            
            # Timeout dla WebRTC
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Wyłącz buforowanie dla WebRTC
            proxy_buffering off;
            proxy_request_buffering off;

            proxy_pass http://srs:1985/rtc/v1/whip/?$args;
        }

        #################################
        # WebRTC Session Management – obsługa sesji WebRTC
        # /rtc/v1/whep/[session-id] lub /rtc/v1/whip/[session-id]
        #################################
        location ~ ^/rtc/v1/(whep|whip)/(?<session_id>[^/?]+)$ {
            # Przekazuj wszystkie metody (DELETE, PATCH, itp.)
            proxy_method $request_method;
            
            # Nagłówki potrzebne dla WebRTC
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Przekazuj wszystkie nagłówki i body
            proxy_pass_request_headers on;
            proxy_pass_request_body on;
            
            # Timeout dla WebRTC
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Wyłącz buforowanie
            proxy_buffering off;
            proxy_request_buffering off;

            proxy_pass http://srs:1985/rtc/v1/$1/$session_id$is_args$args;
        }

    # ----------------------------
    # PROXY DLA VIDEO
    # ----------------------------
    location /videos/ {
        proxy_pass http://simple-storage:9000/videos/;

        # zachowaj oryginalny host i parametry
        proxy_set_header Host simple-storage:9000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass_request_headers on;
        proxy_redirect off;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }

    # ----------------------------
    # PROXY DLA PHOTOS
    # ----------------------------
    location /photos/ {
        proxy_pass http://simple-storage:9000/photos/;

        proxy_set_header Host simple-storage:9000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass_request_headers on;
        proxy_redirect off;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }


        #################################
        # Statyczne pliki, debug, itp.
        #################################
        # location / {
        #     root   /usr/share/nginx/html;
        #     index  index.html;
        # }

        location /debug/ {
            alias /tmp/;
            autoindex on;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }
    }
}